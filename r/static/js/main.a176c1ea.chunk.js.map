{"version":3,"sources":["game/util/message_bus.js","game/user_agent.js","game/game.js","game/loading_screen.js","game/start_screen.js","game/gameover_screen.js","game/bullet.js","game/util/collision_detection.js","game/util/random.js","game/enemy_tank.js","game/explode.js","game/tank.js","game/healthy_point_label.js","game/score_label.js","app.js","serviceWorker.js","index.js"],"names":["msgBus","this","listenerMap","Map","msgType","callBack","list","get","set","push","index","indexOf","content","i","singleton","document","body","addEventListener","event","keyCode","send","init","GAME_STATUS","UNINIT","INIT","LOADED","PLAYING","GAME_OVER","Game","status","newStatus","Error","playContainer","visible","old","new","app","pixiApp","loaderTmp","forEach","resUrl","loader","add","PIXI","stage","addChild","updateStatus","load","setTimeout","onResLoaded","window","__DEBUG","g","game","listen","ticker","start","innerWidth","innerHeight","STATUS","CAMP","WE","ENEMY","getInstance","LOADING_STR","loadingText","fontFamily","fontSize","fill","align","intervalNo","onGameStatusChange","anchor","x","Math","floor","getWidth","y","getHeight","dotCount","setInterval","postfix","text","show","getStage","removeChild","clearInterval","unListen","startText","onClickStart","notAdded","interactive","buttonMode","on","gameoverText","restartText","onClickRestart","Bullet","owner","camp","sp","TextureCache","getPlayContainer","getTicker","onTick","direction","speed","rotation","enemyActiveBulletSet","myActiveBulletSet","flyDirection","PI","cos","sin","hide","enemyBulletPool","delete","myBulletPool","Set","getMineOne","one","length","pop","reactive","getEnemyOne","getAllMine","values","getAllEnemy","addToLoader","getBox","dx","width","dy","height","x1","x2","y1","y2","getMaxRadius","undefined","maxRadius","b","r1","sqrt","r2","r3","r4","max","checkCircle","sp1","sp2","d","d2","checkPointInSprite","p","lp","toLocal","check4PointWithManyPoints","sps","randomInt","min","range","random","EnemyTank","tickCount","aliveTankPool","idleTankPool","splice","moveToIdleTankPool","fire","bulletSpeed","sendANewTank","tank","size","next","value","dt","waitRandomTime","getActiveTanks","explode","targetSp","console","log","LOAD_STATUS","LOADING","READY","Tank","onLeft","onUp","onDown","onRight","loadStatus","This","loadReady","hp","dhp","enemyTanks","enemyTankSps","map","et","hitTank","p1","toGlobal","p2","p3","p4","check4PointWithMany","crash","changeHp","enemyBullets","enemyBulletSps","eb","hitBullet","myBullets","myBulletsSps","hitIndex","limit","loadColdDown","mt","onGameStart","hpText","spContainer","hpLabel","hpSps","scale","alpha","SCORE_STR","scoreText","scoreLabel","score","s","resizeTo","Boolean","location","hostname","match","appendChild","view","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a176c1ea.chunk.js","sourcesContent":["class MsgBus {\r\n  constructor() {\r\n    this.listenerMap = new Map();\r\n  }\r\n\r\n  listen (msgType, callBack) {\r\n    let list = this.listenerMap.get(msgType);\r\n    if (!list) {\r\n      list = [];\r\n      this.listenerMap.set(msgType, list);\r\n    }\r\n    list.push(callBack);\r\n  }\r\n\r\n  unListen (msgType, callBack) {\r\n    const list = this.listenerMap.get(msgType);\r\n    if (!list){\r\n      return;\r\n    }\r\n    const index = list.indexOf(callBack);\r\n    if (index<0){\r\n      return;\r\n    }\r\n    list[index] = null;\r\n  }\r\n\r\n  send (msgType, content) {\r\n    const list = this.listenerMap.get(msgType) || [];\r\n    // if(window.__DEBUG){\r\n    //   console.log('[msg]: '+msgType);\r\n    //   content&&console.log(content);\r\n    // }\r\n\r\n    for(let i in list) {\r\n      list[i] && list[i](content);\r\n    }\r\n  }\r\n};\r\n\r\nconst msgBus = new MsgBus();\r\n\r\nexport default msgBus;","import msgBus from './util/message_bus';\r\n\r\nclass UserAgent {\r\n  init(){\r\n    document.body.addEventListener('keydown', event => {\r\n      if(event.keyCode === 37){\r\n        msgBus.send('user.key_left');\r\n      }else if(event.keyCode === 38){\r\n        msgBus.send('user.key_up');\r\n      }else if(event.keyCode === 39){\r\n        msgBus.send('user.key_right');\r\n      }else if(event.keyCode === 40){\r\n        msgBus.send('user.key_down');\r\n      }else if(event.keyCode === 32){\r\n        msgBus.send('user.key_space');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst singleton = new UserAgent();\r\n\r\nsingleton.init();\r\n\r\nexport default singleton;","import msgBus from './util/message_bus';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nconst GAME_STATUS = {\r\n  UNINIT: 0,\r\n  INIT: 1,\r\n  LOADED: 2,\r\n  PLAYING: 3,\r\n  GAME_OVER:4\r\n};\r\n\r\nconst CAMP = {\r\n  WE: 0,\r\n  ENEMY: 1\r\n};\r\n\r\nclass Game{\r\n  constructor(){\r\n    this.status = GAME_STATUS.UNINIT;\r\n  }\r\n\r\n  // game state machine\r\n  updateStatus(newStatus){\r\n    if(newStatus === GAME_STATUS.INIT) {\r\n      if (this.status !== GAME_STATUS.UNINIT) {\r\n        throw new Error('Game status wrong, do not init again.');\r\n      }\r\n      this.status = GAME_STATUS.INIT;\r\n    } else if(newStatus === GAME_STATUS.LOADED) {\r\n      if (this.status !== GAME_STATUS.INIT) {\r\n        throw new Error('Game status wrong, do not load again.');\r\n      }\r\n    } else if(newStatus === GAME_STATUS.PLAYING) {\r\n      if (this.status !== GAME_STATUS.LOADED && this.status !== GAME_STATUS.GAME_OVER) {\r\n        throw new Error('Game status wrong, do not start when init or playing.');\r\n      }\r\n      this.playContainer.visible = true;\r\n    } else if(newStatus === GAME_STATUS.GAME_OVER) {\r\n      if (this.status !== GAME_STATUS.PLAYING) {\r\n        throw new Error('Game status wrong, should from playing.');\r\n      }\r\n      this.playContainer.visible = false;\r\n    } else {\r\n      throw new Error('Wrong game status');\r\n    }\r\n    const old = this.status;\r\n    this.status = newStatus;\r\n    msgBus.send('game.statusChange', {old, new: newStatus});\r\n\r\n    if(newStatus === GAME_STATUS.LOADED) {\r\n      msgBus.send('game.statusChange.loaded');\r\n    }\r\n  }\r\n\r\n  init(app){\r\n    this.pixiApp = app;\r\n    if (this.loaderTmp) {\r\n      this.loaderTmp.forEach(resUrl => app.loader.add(resUrl));\r\n    }\r\n\r\n    this.playContainer = new PIXI.Container();\r\n    this.playContainer.visible = false;\r\n    app.stage.addChild(this.playContainer);\r\n    this.updateStatus(GAME_STATUS.INIT);\r\n    this.pixiApp.loader.load(() => {\r\n      setTimeout(() => this.onResLoaded(), 1000);\r\n      // TODO \r\n      if(window.__DEBUG){\r\n        window.g = game;\r\n        window.msgBus = msgBus;\r\n        window.PIXI = PIXI;\r\n      }\r\n    });\r\n    msgBus.listen('start_screen.start', () => this.updateStatus(GAME_STATUS.PLAYING));\r\n    msgBus.listen('tank.gameover', () => this.updateStatus(GAME_STATUS.GAME_OVER));\r\n    msgBus.listen('gameover_screen.restart', () => this.updateStatus(GAME_STATUS.PLAYING));\r\n    this.pixiApp.ticker.start();\r\n  }\r\n\r\n  onResLoaded(){\r\n    this.updateStatus(GAME_STATUS.LOADED);\r\n  }\r\n\r\n  addToLoader(resUrl){\r\n    if (this.status !== GAME_STATUS.UNINIT ) {\r\n      throw new Error('Cannot add to loader after init');\r\n    }\r\n    if (this.pixiApp){\r\n      this.pixiApp.loader.add(resUrl);\r\n    } else {\r\n      if(!this.loaderTmp) {\r\n        this.loaderTmp = [];\r\n      }\r\n      this.loaderTmp.push(resUrl);\r\n    }\r\n  }\r\n\r\n  getStage(){\r\n    return this.pixiApp.stage;\r\n  }\r\n\r\n  getPlayContainer(){\r\n    return this.playContainer;\r\n  }\r\n\r\n  getTicker() {\r\n    return this.pixiApp.ticker;\r\n  }\r\n\r\n  getWidth() {\r\n    return window.innerWidth;\r\n  }\r\n\r\n  getHeight () {\r\n    return window.innerHeight;\r\n  }\r\n}\r\n\r\nGame.STATUS = GAME_STATUS;\r\nGame.CAMP = CAMP;\r\n// singleton\r\nconst game = new Game();\r\nGame.getInstance = () => game;\r\n\r\nexport default Game;\r\n","import * as PIXI from 'pixi.js';\r\nimport msgBus from './util/message_bus';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\nconst LOADING_STR = 'Loading/加载中';\r\nconst loadingText = new PIXI.Text(LOADING_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize: 64,\r\n  fill : 0xff1010,\r\n  align : 'center'}\r\n);\r\n\r\nlet intervalNo = -1;\r\n\r\nfunction show(stage){\r\n  stage.addChild(loadingText);\r\n  loadingText.anchor.set(0.5);\r\n  loadingText.x = Math.floor(game.getWidth()/2);\r\n  loadingText.y = Math.floor(game.getHeight()/2);\r\n\r\n  let dotCount = 0 ;\r\n  function updateDot(){\r\n    dotCount++;\r\n    dotCount = dotCount > 3 ? 0 : dotCount;\r\n    let postfix = '';\r\n    for(let i=0;i<dotCount;i++){\r\n      postfix += '.';\r\n    }\r\n    loadingText.text = LOADING_STR + postfix;\r\n  }\r\n  intervalNo = setInterval(updateDot, 200);\r\n}\r\n\r\nfunction hide(stage){\r\n  stage.removeChild(loadingText);\r\n  clearInterval(intervalNo);\r\n}\r\n\r\nfunction onGameStatusChange(content) {\r\n  if (content.new === Game.STATUS.INIT) {\r\n    show(game.getStage());\r\n  } else if (content.new === Game.STATUS.LOADED) {\r\n    hide(game.getStage());\r\n    msgBus.unListen('game.statusChange', onGameStatusChange);\r\n  }\r\n}\r\n\r\nmsgBus.listen('game.statusChange', onGameStatusChange);\r\n\r\nexport {show, hide};","import * as PIXI from 'pixi.js';\r\nimport msgBus from './util/message_bus';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\nconst START_STR = 'Start Game/开始游戏';\r\nconst startText = new PIXI.Text(START_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize: 64,\r\n  fill : 0x0000cf,\r\n  align : 'center'}\r\n);\r\n\r\nfunction onClickStart(){\r\n  if (game.status === Game.STATUS.LOADED ) {\r\n    msgBus.send('start_screen.start')\r\n  }\r\n}\r\n\r\nlet notAdded = true;\r\n\r\nfunction show(stage){\r\n  if (notAdded) {\r\n    stage.addChild(startText);\r\n    startText.anchor.set(0.5);\r\n    startText.x = Math.floor(game.getWidth()/2);\r\n    startText.y = Math.floor(game.getHeight()/2);\r\n    startText.interactive = true;\r\n    startText.buttonMode = true;\r\n    notAdded = false;\r\n  }\r\n\r\n  startText.visible = true;\r\n  startText.on('click', onClickStart);\r\n  msgBus.listen('user.key_space', onClickStart);\r\n}\r\n\r\nfunction hide(){\r\n  startText.visible = false;\r\n}\r\n\r\nfunction onGameStatusChange(content) {\r\n  if (content.new === Game.STATUS.LOADED) {\r\n    show(game.getStage());\r\n  } else if (content.new === Game.STATUS.PLAYING) {\r\n    hide();\r\n  }\r\n}\r\n\r\nmsgBus.listen('game.statusChange', onGameStatusChange);\r\n\r\nexport {show, hide};","import * as PIXI from 'pixi.js';\r\nimport msgBus from './util/message_bus';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\nconst GAMEOVER_STR = 'GAME OVER!/游戏结束！';\r\nconst gameoverText = new PIXI.Text(GAMEOVER_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize: 64,\r\n  fill : 0xff1010,\r\n  align : 'center'}\r\n);\r\n\r\nconst RESTART_STR = 'Restart/重新开始？';\r\nconst restartText = new PIXI.Text(RESTART_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize:48,\r\n  fill : 0x0000cf,\r\n  align : 'center'}\r\n);\r\n\r\nfunction onClickRestart(){\r\n  if (game.status === Game.STATUS.GAME_OVER) {\r\n    hide();\r\n    msgBus.send('gameover_screen.restart');\r\n  }\r\n}\r\n\r\nlet notAdded = true;\r\n\r\nfunction show(stage){\r\n  if (notAdded) {\r\n    stage.addChild(gameoverText);\r\n    gameoverText.anchor.set(0.5);\r\n    gameoverText.x = Math.floor(game.getWidth()/2);\r\n    gameoverText.y = Math.floor(game.getHeight()/4);\r\n\r\n    stage.addChild(restartText);\r\n    restartText.anchor.set(0.5);\r\n    restartText.x = Math.floor(game.getWidth()/2);\r\n    restartText.y = Math.floor(game.getHeight()/4*3);\r\n    restartText.interactive = true;\r\n    restartText.buttonMode = true;\r\n    notAdded = false;\r\n  }\r\n\r\n  gameoverText.visible = true;\r\n  restartText.visible = true;\r\n  restartText.on('click', onClickRestart);\r\n  msgBus.listen('user.key_space', onClickRestart);\r\n}\r\n\r\nfunction hide(){\r\n  gameoverText.visible = false;\r\n  restartText.visible = false;\r\n}\r\n\r\nfunction onGameStatusChange(content) {\r\n  if (content.new === Game.STATUS.GAME_OVER) {\r\n    show(game.getStage());\r\n  }\r\n}\r\n\r\nmsgBus.listen('game.statusChange', onGameStatusChange);\r\n\r\nexport {show, hide};","import * as PIXI from 'pixi.js';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\n\r\nclass Bullet {\r\n  constructor(owner){\r\n    this.owner = owner;\r\n    if(owner.camp === Game.CAMP.ENEMY) {\r\n      this.sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/bullet2.png']);\r\n    } else {\r\n      this.sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/bullet.png']);\r\n    }\r\n    \r\n    this.sp.anchor.set(0.5);\r\n    game.getPlayContainer().addChild(this.sp);\r\n    game.getTicker().add(() => this.onTick());\r\n  }\r\n\r\n  reactive(owner, direction, speed){\r\n    \r\n    this.sp.x = owner.sp.x;\r\n    this.sp.y = owner.sp.y;\r\n    this.sp.rotation = direction;\r\n    this.speed = speed;\r\n    this.sp.visible = true;\r\n    if(owner.camp === Game.CAMP.ENEMY) {\r\n      enemyActiveBulletSet.add(this);\r\n    } else {\r\n      myActiveBulletSet.add(this);\r\n    }\r\n    if(owner.camp !== this.owner.camp) {\r\n      throw new Error('bullet can not change camp!');\r\n    }\r\n    this.owner = owner;\r\n\r\n  }\r\n\r\n  onTick(){\r\n    if (!this.sp.visible){return;}\r\n    const flyDirection = this.sp.rotation - Math.PI/2;\r\n    this.sp.x += this.speed * Math.cos(flyDirection);\r\n    this.sp.y += this.speed * Math.sin(flyDirection);\r\n    if(this.sp.x > game.getWidth() || this.sp.x < 0) {\r\n      this.hide();\r\n    }\r\n    if(this.sp.y > game.getHeight() || this.sp.y < 0) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide(){\r\n    this.sp.visible = false;\r\n    if (this.owner.camp === Game.CAMP.ENEMY){\r\n      enemyBulletPool.push(this);\r\n      enemyActiveBulletSet.delete(this);\r\n    } else {\r\n      myBulletPool.push(this);\r\n      myActiveBulletSet.delete(this);\r\n    }\r\n  }\r\n}\r\n\r\nconst myBulletPool = [];\r\nconst myActiveBulletSet = new Set();\r\n\r\nBullet.getMineOne = function(owner, direction, speed){\r\n  let one;\r\n  if (myBulletPool.length) {\r\n    one = myBulletPool.pop();\r\n  } else {\r\n    one = new Bullet(owner);\r\n  }\r\n  one.reactive(owner, direction, speed);\r\n  return one;\r\n}\r\n\r\nconst enemyBulletPool = [];\r\nconst enemyActiveBulletSet = new Set();\r\n\r\nBullet.getEnemyOne = function(owner, direction, speed){\r\n  let one;\r\n  if (enemyBulletPool.length) {\r\n    one = enemyBulletPool.pop();\r\n  } else {\r\n    one = new Bullet(owner);\r\n  }\r\n  one.reactive(owner, direction, speed);\r\n  return one;\r\n}\r\n\r\nBullet.getAllMine = () => {\r\n  return [...myActiveBulletSet.values()];\r\n}\r\n\r\nBullet.getAllEnemy = () => {\r\n  return [...enemyActiveBulletSet.values()];\r\n}\r\n\r\ngame.addToLoader('assets/bullet.png');\r\ngame.addToLoader('assets/bullet2.png');\r\n\r\nexport default Bullet;","import * as PIXI from 'pixi.js';\r\n\r\nfunction getBox(sp){\r\n  const dx = sp.anchor.x * sp.width;\r\n  const dy = sp.anchor.y * sp.height;\r\n  return {\r\n  x1: -dx,\r\n  x2: sp.width - dx,\r\n  y1: -dy,\r\n  y2: sp.height - dy\r\n  };\r\n}\r\n\r\nfunction getMaxRadius(sp){\r\n  if (sp.maxRadius ===undefined){\r\n  const b = getBox(sp);\r\n  const r1 = Math.sqrt(b.x1*b.x1 + b.y1*b.y1);\r\n  const r2 = Math.sqrt(b.x2*b.x2 + b.y1*b.y1);\r\n  const r3 = Math.sqrt(b.x1*b.x1 + b.y2*b.y2);\r\n  const r4 = Math.sqrt(b.x2*b.x2 + b.y2*b.y2);\r\n  sp.maxRadius = Math.max(r1, r2, r3, r4);\r\n  }\r\n  return sp.maxRadius;\r\n}\r\n\r\nfunction checkCircle(sp1, sp2){\r\n  const d = getMaxRadius(sp1) + getMaxRadius(sp2);\r\n  const d2 = d*d;\r\n  const dx = sp1.x-sp2.x;\r\n  const dy = sp1.y-sp2.y;\r\n  return (dx*dx + dy*dy) <= d2;\r\n}\r\n\r\nfunction checkPointInSprite(p, sp){\r\n  const b = getBox(sp);\r\n  const lp = sp.toLocal(p);\r\n  \r\n  return lp.x<=b.x2&&lp.x>=b.x1&&lp.y<=b.y2&&lp.y>=b.y1;\r\n}\r\n\r\nfunction check4Point(sp1, sp2){\r\n  if (!checkCircle(sp1, sp2)){\r\n  return false;\r\n  }\r\n  const b = getBox(sp1);\r\n  const p1 = sp1.toGlobal(new PIXI.Point(b.x1, b.y1));\r\n  if(checkPointInSprite(p1, sp2)){\r\n  return true;\r\n  }\r\n  const p2 = sp1.toGlobal(new PIXI.Point(b.x2, b.y1));\r\n  if(checkPointInSprite(p2, sp2)){\r\n  return true;\r\n  }\r\n  const p3 = sp1.toGlobal(new PIXI.Point(b.x1, b.y2));\r\n  if(checkPointInSprite(p3, sp2)){\r\n  return true;\r\n  }\r\n  const p4 = sp1.toGlobal(new PIXI.Point(b.x2, b.y2));\r\n  if(checkPointInSprite(p4, sp2)){\r\n  return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n//check any of these points in this sprite or not\r\nfunction check4PointWithManyPoints(sp1, sps){\r\n  for(let i in sps){\r\n    const sp2 = sps[i];\r\n    if (!checkCircle(sp1, sp2)){\r\n      continue;\r\n    }\r\n    if(checkPointInSprite(new PIXI.Point(sp2.x, sp2.y), sp1)){\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n// check any sprite in sp1 or not.\r\nfunction check4PointWithMany(sp1, sps){\r\n  const b = getBox(sp1);\r\n  const p1 = sp1.toGlobal(new PIXI.Point(b.x1, b.y1));\r\n  const p2 = sp1.toGlobal(new PIXI.Point(b.x2, b.y1));\r\n  const p3 = sp1.toGlobal(new PIXI.Point(b.x1, b.y2));\r\n  const p4 = sp1.toGlobal(new PIXI.Point(b.x2, b.y2));\r\n\r\n  for(let i in sps){\r\n  const sp2 = sps[i];\r\n  if (!checkCircle(sp1, sp2)){\r\n    continue;\r\n  }\r\n  if(checkPointInSprite(p1, sp2)){\r\n    return i;\r\n  }\r\n  if(checkPointInSprite(p2, sp2)){\r\n    return i;\r\n  }\r\n  if(checkPointInSprite(p3, sp2)){\r\n    return i;\r\n  }\r\n  if(checkPointInSprite(p4, sp2)){\r\n    return i;\r\n  }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport {checkPointInSprite, check4Point, check4PointWithMany, check4PointWithManyPoints};","const randomInt = (min, max) => {\r\n  if(max === min) {\r\n    return min;\r\n  }\r\n  const range = (max > min ? (max - min) : (min - max)) + 1;\r\n  return Math.floor(Math.random() * range) + min;\r\n};\r\n  \r\nconst randomBool = () => {\r\n  return randomInt(0, 1) > 0;\r\n};\r\n\r\nexport {randomInt, randomBool};","import msgBus from './util/message_bus';\r\nimport * as PIXI from 'pixi.js';\r\nimport Game from './game';\r\nimport Bullet from './bullet';\r\nimport {randomInt} from './util/random';\r\n\r\nconst game = Game.getInstance();\r\n\r\nclass EnemyTank {\r\n  constructor(){\r\n    this.camp = Game.CAMP.ENEMY;\r\n    this.sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/tank2.png']);\r\n    this.sp.anchor.set(0.5);\r\n    this.sp.rotation = Math.PI;\r\n    game.getPlayContainer().addChild(this.sp);\r\n    game.getTicker().add(() => this.onTick());\r\n    this.tickCount = 0;\r\n    this.randomInt = randomInt(1,60);\r\n  }\r\n\r\n  reactive(){\r\n    this.sp.x = Math.floor(Math.random() * game.getWidth());\r\n    this.sp.y = 0;\r\n    this.sp.rotation = Math.random()*Math.PI/2 + Math.PI/4*3;\r\n    this.sp.visible = true;\r\n    aliveTankPool.push(this);\r\n  }\r\n\r\n  moveToIdleTankPool(){\r\n    this.sp.visible = false;\r\n    idleTankPool.add(this);\r\n    const i = aliveTankPool.indexOf(this);\r\n    aliveTankPool.splice(i, 1);\r\n  }\r\n\r\n  onTick(){\r\n    if(this.sp.visible) {\r\n      this.sp.y -= Math.cos(this.sp.rotation) * EnemyTank.speed;\r\n      this.sp.x += Math.sin(this.sp.rotation) * EnemyTank.speed;\r\n      if(this.sp.y > game.getHeight() || this.sp.x < 0 || this.sp.x > game.getWidth()){\r\n        this.moveToIdleTankPool();\r\n      }\r\n\r\n      this.tickCount++;\r\n      if(this.tickCount> 1000000) {\r\n        this.tickCount = 0;\r\n      }\r\n      if(this.tickCount%240 === this.randomInt) {\r\n        this.fire();\r\n      }\r\n    }\r\n  }\r\n\r\n  fire(){\r\n    if (game.status === Game.STATUS.PLAYING){\r\n      Bullet.getEnemyOne(this, this.sp.rotation, EnemyTank.bulletSpeed);\r\n    }\r\n  }\r\n\r\n  crash() {\r\n    this.moveToIdleTankPool();\r\n    // TODO\r\n  }\r\n}\r\n\r\nEnemyTank.speed = 1;\r\nEnemyTank.bulletSpeed = 2;\r\n\r\nconst idleTankPool = new Set();\r\nconst aliveTankPool = [];\r\n\r\nfunction sendANewTank(){\r\n  let tank;\r\n  if(idleTankPool.size){\r\n    tank = idleTankPool.values().next().value;\r\n    idleTankPool.delete(tank);\r\n  } else {\r\n    tank = new EnemyTank();\r\n  }\r\n  tank.reactive();\r\n  waitRandomTime(sendANewTank);\r\n}\r\n\r\nfunction waitRandomTime(callBack) {\r\n  const dt = Math.floor(Math.random() * 1500) + 2500;\r\n  if (game.status === Game.STATUS.PLAYING) {\r\n    setTimeout(callBack, dt);\r\n  }\r\n}\r\n\r\nfunction onGameStart(){\r\n  sendANewTank();\r\n}\r\n\r\nmsgBus.listen('game.statusChange', content => {\r\n  if (content.new === Game.STATUS.PLAYING) {\r\n    onGameStart();\r\n  }\r\n});\r\n\r\nEnemyTank.getActiveTanks = () => {\r\n  return aliveTankPool;\r\n};\r\n\r\ngame.addToLoader('assets/tank2.png');\r\n\r\nexport default EnemyTank;","import * as PIXI from 'pixi.js';\r\nimport Game from './game';\r\nimport msgBus from './util/message_bus';\r\n\r\nconst game = Game.getInstance();\r\nlet sp;\r\n\r\nfunction hide(){\r\n  if (sp){\r\n    sp.visible = false;\r\n  } \r\n}\r\n\r\nfunction explode(targetSp){\r\n  console.log(targetSp);\r\n  if(!sp) {\r\n    return;\r\n  }\r\n  sp.x = targetSp.x;\r\n  sp.y = targetSp.y;\r\n  sp.visible = true;\r\n  setTimeout(hide, 200);\r\n}\r\n\r\nfunction onGameLoaded(){\r\n  sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/explode.png']);\r\n  sp.visible = false;\r\n  game.getStage().addChild(sp);\r\n}\r\n\r\ngame.addToLoader('assets/explode.png');\r\nmsgBus.listen('game.statusChange.loaded', onGameLoaded);\r\nexport {explode};","import msgBus from './util/message_bus';\r\nimport * as PIXI from 'pixi.js';\r\nimport Game from './game';\r\nimport Bullet from './bullet';\r\nimport {check4PointWithManyPoints, check4PointWithMany } from './util/collision_detection';\r\nimport EnemyTank from './enemy_tank';\r\nimport {explode} from './explode';\r\n\r\nconst game = Game.getInstance();\r\n\r\n// Tank loading status, cold down time.\r\nconst LOAD_STATUS = {\r\n  LOADING: 0,\r\n  READY: 1\r\n}\r\n\r\nclass Tank {\r\n  constructor() {\r\n    this.camp = Game.CAMP.WE;\r\n    msgBus.listen('user.key_left', () => this.onLeft());\r\n    msgBus.listen('user.key_up', () => this.onUp());\r\n    msgBus.listen('user.key_down', () => this.onDown());\r\n    msgBus.listen('user.key_right', () => this.onRight());\r\n    msgBus.listen('user.key_space', () => this.fire());\r\n    this.loadStatus = LOAD_STATUS.READY;\r\n    const This = this;\r\n    this.loadReady = () => { This.loadStatus = LOAD_STATUS.READY };\r\n  }\r\n\r\n  onGameStart() {\r\n    if (!this.sp) {\r\n      this.sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/tank1.png']);\r\n      this.sp.anchor.set(0.5);\r\n      game.getPlayContainer().addChild(this.sp);\r\n      game.getTicker().add(() => this.onTick());\r\n    }\r\n    this.sp.x = Math.floor(game.getWidth() / 2);\r\n    this.sp.y = Math.floor(game.getHeight() - 100);\r\n    this.sp.rotation = 0;\r\n    this.hp = 3;\r\n    this.sp.visible = true;\r\n    msgBus.send('tank.hpChange', this.hp);\r\n  }\r\n\r\n  // return this tank dead or not\r\n  changeHp(dhp) {\r\n    this.hp -= dhp;\r\n    msgBus.send('tank.hpChange', this.hp);\r\n    if (this.hp <= 0) {\r\n      explode(this.sp);\r\n      msgBus.send('tank.gameover');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onTick() {\r\n    if (game.status === Game.STATUS.PLAYING) {\r\n      const enemyTanks = EnemyTank.getActiveTanks();\r\n      const enemyTankSps = enemyTanks.map(et => et.sp);\r\n      const hitTank = check4PointWithMany(this.sp, enemyTankSps);\r\n      if (hitTank>=0) {\r\n        explode(enemyTankSps[hitTank]);\r\n        enemyTanks[hitTank].crash();\r\n        if(this.changeHp(3)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      const enemyBullets = Bullet.getAllEnemy();\r\n      const enemyBulletSps = enemyBullets.map(eb => eb.sp);\r\n      const hitBullet = check4PointWithManyPoints(this.sp, enemyBulletSps);\r\n      if (hitBullet>=0) {\r\n        enemyBullets[hitBullet].hide();\r\n        if(this.changeHp(1)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // let enemyTanksMap = null;\r\n      const myBullets = Bullet.getAllMine();\r\n      const myBulletsSps = myBullets.map(eb => eb.sp);\r\n      enemyTanks.forEach(et => {\r\n        const hitIndex = check4PointWithManyPoints(et.sp, myBulletsSps);\r\n        if (hitIndex>=0) {\r\n          myBullets[hitIndex].hide();\r\n          explode(et.sp);\r\n          et.crash();\r\n          msgBus.send('score.add', 1);\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  onLeft() {\r\n    this.sp.x -= Tank.speed;\r\n    this.sp.rotation = - Math.PI / 2;\r\n    if (this.sp.x < 0) {\r\n      this.sp.x = 0;\r\n    }\r\n  }\r\n\r\n  onRight() {\r\n    this.sp.x += Tank.speed;\r\n    this.sp.rotation = Math.PI / 2;\r\n    const limit = game.getWidth();\r\n    if (this.sp.x > limit) {\r\n      this.sp.x = limit;\r\n    }\r\n  }\r\n\r\n  onUp() {\r\n    this.sp.y -= Tank.speed;\r\n    this.sp.rotation = 0;\r\n    if (this.sp.y < 0) {\r\n      this.sp.y = 0;\r\n    }\r\n  }\r\n\r\n  onDown() {\r\n    this.sp.y += Tank.speed;\r\n    this.sp.rotation = Math.PI;\r\n    const limit = game.getHeight();\r\n    if (this.sp.y > limit) {\r\n      this.sp.y = limit;\r\n    }\r\n  }\r\n\r\n  fire() {\r\n    if (game.status === Game.STATUS.PLAYING && this.loadStatus === LOAD_STATUS.READY) {\r\n      Bullet.getMineOne(this, this.sp.rotation, Tank.bulletSpeed);\r\n      this.loadStatus = LOAD_STATUS.LOADING;\r\n      setTimeout(this.loadReady, Tank.loadColdDown);\r\n    }\r\n  }\r\n}\r\n\r\nTank.speed = 10;\r\nTank.bulletSpeed = 20;\r\nTank.loadColdDown = 500;//milliseconds\r\n\r\nlet tank = null;\r\nTank.getInstance = () => {\r\n  if (!tank) {\r\n    tank = new Tank();\r\n    if (window.__DEBUG) {\r\n      window.mt = tank;\r\n    }\r\n  }\r\n  return tank;\r\n};\r\n\r\nmsgBus.listen('game.statusChange', content => {\r\n  if (content.new === Game.STATUS.PLAYING) {\r\n    Tank.getInstance().onGameStart();\r\n  }\r\n});\r\n\r\ngame.addToLoader('assets/tank1.png');\r\n\r\nexport default Tank;","import * as PIXI from 'pixi.js';\r\nimport msgBus from './util/message_bus';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\nconst HP_STR = 'HP/装甲: ';\r\nconst hpText = new PIXI.Text(HP_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize: 28,\r\n  fill : 0x008f00,\r\n  align : 'left'}\r\n);\r\n\r\nconst spContainer = new PIXI.Container();\r\n\r\nconst hpLabel = new PIXI.Container();\r\nhpLabel.addChild(hpText);\r\nhpLabel.addChild(spContainer);\r\n\r\nlet notAdded = true;\r\n\r\nfunction onGameStatusChange(content) {\r\n  if (content.new === Game.STATUS.GAME_OVER) {\r\n    hpLabel.visible = false;\r\n  } else if (content.new === Game.STATUS.PLAYING) {\r\n    if (notAdded) {\r\n      game.getStage().addChild(hpLabel);\r\n      hpLabel.y = game.getHeight() - 80;\r\n      spContainer.x = 120;\r\n      notAdded = false;\r\n    }\r\n    hpLabel.visible = true;\r\n  }\r\n}\r\n\r\nconst hpSps = [];\r\n\r\nfunction onHpChange(hp){\r\n  if (hp>hpSps.length){\r\n    for(let i=hpSps.length;i<hp;i++){\r\n      const sp = new PIXI.Sprite(PIXI.utils.TextureCache['assets/tank1.png']);\r\n      sp.scale.set(0.5);\r\n      sp.alpha = 0.5;\r\n      sp.x = i*30;\r\n      hpSps.push(sp);\r\n      spContainer.addChild(sp);\r\n    }\r\n  }\r\n  for (let i=0; i<hpSps.length;i++){\r\n    if (i<hp){\r\n      hpSps[i].visible = true;\r\n    } else {\r\n      hpSps[i].visible = false;\r\n    }\r\n  }\r\n}\r\n\r\nmsgBus.listen('game.statusChange', onGameStatusChange);\r\nmsgBus.listen('tank.hpChange', onHpChange);\r\n\r\nexport {hpLabel};","import * as PIXI from 'pixi.js';\r\nimport msgBus from './util/message_bus';\r\nimport Game from './game';\r\n\r\nconst game = Game.getInstance();\r\nconst SCORE_STR = 'Score/得分: ';\r\nconst scoreText = new PIXI.Text(SCORE_STR, {\r\n  fontFamily : 'Arial',\r\n  fontSize: 28,\r\n  fill : 0x2222ff,\r\n  align : 'center'}\r\n);\r\n\r\nconst scoreLabel = new PIXI.Container();\r\nscoreLabel.addChild(scoreText);\r\n\r\nlet notAdded = true;\r\nlet score = 0;\r\n\r\nfunction onGameStatusChange(content) {\r\n  if (content.new === Game.STATUS.GAME_OVER) {\r\n    // scoreLabel.visible = false;\r\n  } else if (content.new === Game.STATUS.PLAYING) {\r\n    if (notAdded) {\r\n      game.getStage().addChild(scoreLabel);\r\n      scoreLabel.y = 10;\r\n      scoreLabel.x = 100;\r\n      notAdded = false;\r\n    }\r\n    score = 0;\r\n    scoreText.text = SCORE_STR + score;\r\n    scoreLabel.visible = true;\r\n  }\r\n}\r\n\r\nfunction addScore(s){\r\n  score += s;\r\n  scoreText.text = SCORE_STR + score;\r\n}\r\n\r\nmsgBus.listen('game.statusChange', onGameStatusChange);\r\nmsgBus.listen('score.add', addScore);\r\n\r\nexport {scoreLabel};","import * as PIXI from 'pixi.js';\r\nimport './game/user_agent';\r\nimport './game/loading_screen';\r\nimport './game/start_screen';\r\nimport './game/gameover_screen';\r\nimport './game/tank';\r\nimport './game/enemy_tank';\r\nimport './game/healthy_point_label';\r\nimport './game/score_label';\r\nimport Game from './game/game';\r\n\r\nconst app = new PIXI.Application({resizeTo: window});\r\nconst game = Game.getInstance();\r\ngame.init(app);\r\n\r\nexport default app;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\nimport app from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// TODO remove this debug flag\nwindow.__DEBUG = true;\ndocument.body.appendChild(app.view);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}